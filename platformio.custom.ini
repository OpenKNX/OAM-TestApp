;
; global custom
;
[custom]
build_flags =
  ; -D OPENKNX_LOOPTIME_WARNING=25
  ; add OPENKNX_WATCHDOG normal only in releases and not here
  -D OPENKNX_WATCHDOG

[custom_develop]
extends = custom
build_flags =
  ${custom.build_flags}
  -D OPENKNX_HEARTBEAT
  ; -D OPENKNX_DEBUGGER
  ; -D OPENKNX_RUNTIME_STAT
  ; -D OPENKNX_RUNTIME_STAT_BUCKETN=7
  ; "-D OPENKNX_RUNTIME_STAT_BUCKETS=100, 200, 500, 1000, 2000, 5000"
  ; -D OPENKNX_HEARTBEAT_PRIO
  ; -D OPENKNX_RTT
  ; -D BUFFER_SIZE_UP=10240
  ; -D DEBUG_LOOP_TIME=10 ; will print a info when a loop took more than x ms.
  ; -D LOGIC_TRACE
  ; ; to see trace logs, they must match one of the 5 filters (TRACE_LOG1 .. TRACE_LOG2)
  ; "-D OPENKNX_TRACE1=Common.*"
  ; "-D OPENKNX_TRACE1=Button.*"
  ; "-D OPENKNX_TRACE2=Flash.*"
  ; "-D OPENKNX_TRACE3=DummyChannel<1>"
  ; "-D OPENKNX_TRACE4=DummyChannel<[3-5]>"

[custom_releases]
extends = custom
build_flags =
  ${custom.build_flags}

; RP2040
[RP2040_custom]
extends = RP2040, custom
build_flags =
  ; -D OPENKNX_RUNTIME_STAT
  -D DUMMY_FLASH_OFFSET=0xF2000
  -D DUMMY_FLASH_SIZE=0x1000
  -D SERIAL_DEBUG=Serial
  ; "-D OPENKNX_TRACE1=Button.*"

[develop_RP2040_BASE]
extends = RP2040_develop, RP2040_custom, custom_develop, RP2040_UPLOAD_USB
build_flags =
  ${RP2040_develop.build_flags}
  ${RP2040_custom.build_flags}
  ${custom_develop.build_flags}

[env:develop_RP2040_TP]
extends = develop_RP2040_BASE, RP2040_EXCHANGE_16MB
build_flags =
  ${develop_RP2040_BASE.build_flags}
  ${RP2040_EXCHANGE_16MB.build_flags}
  ${KNX_TP.build_flags}
  ; -D BOARD_MASIFI_SENSOR_BREAKOUT
  ; -D OKNXHW_PIPICO_BCU_CONNECTOR
  ; -D OKNXHW_REG1_CONTROLLER2040
  ; -D OKNXHW_UP1_CONTROLLER2040
  ; -D OKNXHW_REG1_CONTROLLER2040
  -D OKNXHW_REG1_BASE_V1

[env:develop_RP2040_IP]
extends = develop_RP2040_BASE, RP2040_EXCHANGE_16MB
; lib_deps =
;   ${Network_Generic.lib_deps}
build_flags =
  ${develop_RP2040_BASE.build_flags}
  ${RP2040_EXCHANGE_16MB.build_flags}
  ${KNX_IP.build_flags}
  ; "-D OPENKNX_TRACE5=Network.*"
  -D OKNXHW_REG1_BASE_IP
  ; -D OKNXHW_REG1_ETH
  -D KNX_IP_W5500
  ; -D KNX_IP_GENERIC
  ;-D KNX_IP_WIFI
  ; -D KNX_LOG_IP


[env:develop_RP2040_PICOW]
extends = develop_RP2040_BASE, RP2040_EXCHANGE_2MB
board = rpipicow
build_flags =
  ${develop_RP2040_BASE.build_flags}
  ${RP2040_EXCHANGE_2MB.build_flags}
  ${KNX_IP.build_flags}
  -D KNX_IP_WIFI
  -D BOARD_PIPICOW
  ; -D KNX_LOG_IP

[env:develop_RP2040_TP_DUALCORE]
extends = env:develop_RP2040_TP
build_flags =
  ${env:develop_RP2040_TP.build_flags}
  -D OPENKNX_DUALCORE

[env:develop_RP2040_TP_JLINK]
extends = env:develop_RP2040_TP, UPLOAD_JLINK

[env:develop_RP2040_TP_DUALCORE_JLINK]
extends = env:develop_RP2040_TP_DUALCORE, UPLOAD_JLINK

[env:develop_RP2040_IP_JLINK]
extends = env:develop_RP2040_IP, UPLOAD_JLINK


; SAMD
[SAMD_custom]
extends = SAMD, custom
build_flags =
  -D DUMMY_FLASH_OFFSET=0x37900
  -D DUMMY_FLASH_SIZE=0x100
  -D SERIAL_DEBUG=SerialUSB
  -D KNX_SERIAL=Serial
  ${KNX_TP.build_flags}

[env:develop_SAMD]
extends = SAMD_develop, SAMD_custom, custom_develop, SAMD_UPLOAD_USB
build_flags =
  ${SAMD_develop.build_flags}
  ${SAMD_custom.build_flags}
  ${custom_develop.build_flags}
  -D BOARD_KONNEKTING_MI
debug_build_flags =
  -Os

[env:develop_SAMD_JLINK]
extends = env:develop_SAMD, UPLOAD_JLINK

; ESP32
[ESP32_custom]
extends = ESP32, custom
build_flags =
  ; -D OPENKNX_RUNTIME_STAT
  -D SERIAL_DEBUG=Serial
  -D KNX_SERIAL=Serial2
  ${KNX_IP.build_flags}
board_build.partitions = esp_partition.csv

[env:develop_ESP32]
extends = ESP32_develop, ESP32_custom, custom_develop, ESP32_UPLOAD_USB
build_flags =
  ${ESP32_develop.build_flags}
  ${ESP32_custom.build_flags}
  ${custom_develop.build_flags}
  -D BOARD_ESP32_DEV

[env:develop_WT32_ETH01]
extends = ESP32_develop, ESP32_custom, custom_develop, ESP32_UPLOAD_USB
build_flags =
  ${ESP32_develop.build_flags}
  ${ESP32_custom.build_flags}
  ${custom_develop.build_flags}
  -D BOARD_ESP32_WT32_ETH01
  -D CONFIG_ETH_ENABLED
; board = wt32-eth01 ; use the default esp32-dev because wt32 board def has a bug


; Releases
[env:release_SAMD]
extends = SAMD_releases, SAMD_custom
build_flags =
   ${SAMD_releases.build_flags}
   ${SAMD_custom.build_flags}
   ${custom_releases.build_flags}
  -D BOARD_KONNEKTING_MI

[env:release_MASIFI_SENSOR_BREAKOUT]
extends = RP2040_releases, RP2040_custom
build_flags =
   ${RP2040_releases.build_flags}
   ${RP2040_custom.build_flags}
   ${custom_releases.build_flags}
  -D BOARD_MASIFI_SENSOR_BREAKOUT

[env:release_PiPico_BCU_Connector]
extends = RP2040_releases, RP2040_custom
build_flags =
   ${RP2040_releases.build_flags}
   ${RP2040_custom.build_flags}
   ${custom_releases.build_flags}
  -D OKNXHW_PIPICO_BCU_CONNECTOR

[env:release_ESP32]
extends = ESP32_releases, ESP32_custom
build_flags =
   ${ESP32_releases.build_flags}
   ${ESP32_custom.build_flags}
   ${custom_releases.build_flags}
  -D BOARD_ESP32_DEV
